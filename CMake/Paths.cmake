set(EXTERNAL_HEADERS "${CMAKE_SOURCE_DIR}/External/include")
include_directories(${EXTERNAL_HEADERS}/sdl2)
include_directories(${EXTERNAL_HEADERS}/glew)

if(TARGET_PLATFORM_WINDOWS AND (TARGET_COMPILER_MSVC OR TARGET_COMPILER_CLANG))
	set(PLATFORM "windows")
elseif(TARGET_PLATFORM_LINUX AND (TARGET_COMPILER_CLANG OR TARGET_COMPILER_GCC))
	set(PLATFORM "linux")
elseif(TARGET_PLATFORM_APPLE AND TARGET_COMPILER_CLANG)
	set(PLATFORM "mac")
else()
	set(PLATFORM "unknown")
	message(WARNING "Unhandled compiler.")
endif()

if (TARGET_ARCH_x64)
	set(ARCHITECTURE "x64")
elseif(TARGET_ARCH_x32)
	set(ARCHITECTURE "x86")
else()
	set(ARCHITECTURE "unknown")
	message(WARNING "Unhandled architecture.")
endif()

set(LIB_DEBUG "${CMAKE_SOURCE_DIR}/External/${PLATFORM}/lib_${ARCHITECTURE}_debug")
set(LIB_RELEASE "${CMAKE_SOURCE_DIR}/External/${PLATFORM}/lib_${ARCHITECTURE}_release")
set(BIN_DEBUG "${CMAKE_SOURCE_DIR}/External/${PLATFORM}/bin_${ARCHITECTURE}_debug")
set(BIN_RELEASE "${CMAKE_SOURCE_DIR}/External/${PLATFORM}/bin_${ARCHITECTURE}_debug")

if (NOT EXISTS ${LIB_DEBUG})
	message("External libraries not found at ${LIB_DEBUG}!")
	message(FATAL_ERROR "Please compile external libraries for ${CMAKE_CXX_COMPILER_ID} on ${ARCHITECTURE}.")
endif()
if (NOT EXISTS ${LIB_RELEASE})
	message("External libraries not found at ${LIB_RELEASE}!")
	message(FATAL_ERROR "Please compile external libraries for ${CMAKE_CXX_COMPILER_ID} on ${ARCHITECTURE}.")
endif()

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)